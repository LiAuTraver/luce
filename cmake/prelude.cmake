if(CMAKE_SOURCE_DIR STREQUAL CMAKE_BINARY_DIR)
  message(FATAL_ERROR "Bad user. Bad configuration.")
endif()

if(NOT DEFINED PROJECT_IS_TOP_LEVEL)
  if(CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)
    set(PROJECT_IS_TOP_LEVEL ON)
  else()
    set(PROJECT_IS_TOP_LEVEL OFF)
  endif()
endif()

macro(is_undefined var)
  if(NOT DEFINED ${var})
    message(FATAL_ERROR "${var} is not defined")
  endif()
endmacro()

message(STATUS "Compiler path: ${CMAKE_CXX_COMPILER}")
message(STATUS "Compiler ID: ${CMAKE_CXX_COMPILER_ID}")
message(STATUS "Compiler version: ${CMAKE_CXX_COMPILER_VERSION}")
message(STATUS "Simulate ID: ${CMAKE_CXX_SIMULATE_ID}")

set(CXX_FLAGS_STYLES_GNU OFF CACHE BOOL "Enable GNU style C++ flags")
set(CXX_FLAGS_STYLES_CLANG OFF CACHE BOOL "Enable Clang style C++ flags")
set(CXX_FLAGS_STYLES_CLANGCL OFF CACHE BOOL "Enable Clang-CL style C++ flags")
set(CXX_FLAGS_STYLES_MSVC OFF CACHE BOOL "Enable MSVC style C++ flags")

if(CMAKE_CXX_COMPILER_ID MATCHES "GNU")
  set(CXX_FLAGS_STYLES_GNU ON)
elseif(CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  if(CMAKE_CXX_SIMULATE_ID MATCHES "MSVC")
    set(CXX_FLAGS_STYLES_CLANGCL ON)
  else()
    set(CXX_FLAGS_STYLES_CLANG ON)
  endif()
elseif(CMAKE_CXX_COMPILER_ID MATCHES "MSVC")
  set(CXX_FLAGS_STYLES_MSVC ON)
else()
  message(FATAL_ERROR "Unsupported compiler: ${CMAKE_CXX_COMPILER_ID}")
endif()

set(CMAKE_CXX_FLAGS_DEBUG "")
set(CMAKE_EXE_LINKER_FLAGS_DEBUG "")